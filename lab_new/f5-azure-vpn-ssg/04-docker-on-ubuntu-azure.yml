# This file establishes the necessary resources on Azure to create a Demo Webserver using Ubuntu
# source: https://github.com/jmcalalang/f5-rs-azure/blob/master/playbooks/server.yml
- name: Create Ubuntu resources
  hosts: localhost
  vars_files:
    - ./config.yml

  tasks:
    - name: Create {{ NODE_NAME }}-server Storage Account in Resource Group {{ PREFIX }}
      azure_rm_storageaccount:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ PREFIX }}"
        name: "{{ NODE_NAME }}stract"
        account_type: Standard_LRS

    - name: Create {{ NODE_NAME }}-serverInternal NIC in Resource Group {{ PREFIX }}
      azure_rm_networkinterface:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ PREFIX }}"
        name: "{{ NODE_NAME }}-server_int_nic"
        virtual_network: "{{ VNET1 }}"
        subnet: "{{ VNET_SUBNET1 }}"
        ip_configurations:
          - name: ipconfig1
            private_ip_allocation_method: Static
            private_ip_address: "{{ NODE_ADDRESS }}"
            public_ip_address_name: "{{ NODE_NAME }}-server-int-pip0"
      register: "app_server_int_nic_private"

    - name: Edit {{ NODE_NAME }}-server_int_nic Security Group in Resource Group {{ PREFIX }} (Allow HTTP(S) Access)
      azure_rm_securitygroup:
          tenant: "{{ TENANT_ID }}"
          client_id: "{{ CLIENT_ID}}"
          secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
          subscription_id: "{{ SUBSCRIPTION_ID }}"
          resource_group: "{{ PREFIX }}"
          name: "{{ NODE_NAME }}-server_int_nic"
          purge_rules: yes
          rules:
              - name: 'AllowHTTP'
                protocol: Tcp
                source_address_prefix: 'VirtualNetwork'
                destination_port_range: 80
                access: Allow
                priority: 100
                direction: Inbound
              - name: 'Allow8080-8084'
                protocol: Tcp
                source_address_prefix: 'VirtualNetwork'
                destination_port_range: "8080-8082"
                access: Allow
                priority: 101
                direction: Inbound
              - name: 'AllowHTTPS'
                protocol: Tcp
                source_address_prefix: 'VirtualNetwork'
                destination_port_range: "445"
                access: Allow
                priority: 102
                direction: Inbound
              - name: 'AllowSSH'
                protocol: Tcp
                source_address_prefix: '{{ RESTRICTED_SRC_ADDRESS }}'
                destination_port_range: 22
                access: Deny #Allow
                priority: 103
                direction: Inbound

    - name: Create {{ NODE_NAME }}-server Virtual Machine
      azure_rm_virtualmachine:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ PREFIX }}"
        name: "{{ NODE_NAME }}-server"
        vm_size: Standard_D1_v2
        storage_account: "{{ NODE_NAME }}stract"
        storage_container: "{{ NODE_NAME }}-server001"
        storage_blob: "{{ NODE_NAME }}-server001.vhd"
        admin_username: "{{ NODE_USER }}"
        admin_password: "{{ NODE_PASSWORD }}"
        network_interfaces: "{{ NODE_NAME }}-server_int_nic"
        append_tags: True
        tags:
          OperatingSystem: "Ubuntu"
          OperatingSystemVersion: "18.04-LTS"
          Applications: "All"
        image:
          offer: UbuntuServer
          publisher: Canonical
          sku: 18.04-LTS
          version: latest

    - name: Execute {{ NODE_NAME }}-server Azure Extension
      azure_rm_virtualmachine_extension:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        name: External-Script-to-install-Backend-Services
        resource_group: "{{ PREFIX }}"
        virtual_machine_name: "{{ NODE_NAME }}-server"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings: '{"fileUris": ["{{ APPLICATION_BUILDING_SCRIPT }}"],"commandToExecute": "./init_web.sh"}'
        auto_upgrade_minor_version: true

...