---
- hosts: f5_bigiq_cm
  connection: local
  serial: 1
  vars:
    provider:
      server: "{{ hostvars[groups['f5_bigiq_cm'][0]]['ansible_host'] }}"
      server_port: 443
      user: admin
      password: "{{ hostvars[groups['f5_bigiq_cm'][0]]['ansible_ssh_pass'] }}"
      auth_provider: "tmos"
      validate_certs: false
    cloudEnvironment: "demo-6001-aws-environment_DO"
    veName: "bigipvm03"
    vePassword: "u7BnD@4f5"
    tenant: "aws"
    appName: "webAppServiceHttp2"
    cn: "webapp-aws"
    vip: "0.0.0.0" # because on AWS single NIC
    sslport: 443
    servers: 
      - "172.100.2.50"

  tasks:
    - name: Create a VE in AWS
      include_role:
        name: f5devcentral.bigiq_create_ve
      vars:
        cloud_environment: "{{ cloudEnvironment }}"
        ve_name: "{{ veName }}"
      register: status

    - name: Get AWS BIG-IP VE IP address (port 8443)
      debug:
        msg: "{{ ve_ip_address }}"

    - name: Get AWS BIG-IP VE private Key Filename
      debug:
        msg: "{{ private_key_filename }}"

    - name: Onboard BIG-IP VE with DO
      include_role:
        name: f5devcentral.atc_deploy
      vars:
        atc_service: Device
        atc_method: POST
        atc_declaration: "{{ lookup('template','do/do_bigip_aws.j2') }}"
        atc_delay: 30
        atc_retries: 15
      register: atc_DO_status

#    - debug: var=atc_DO_status

    - name: Get BIG-IQ Token
      uri:
        url: https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/login
        method: POST
        headers:
          Content-Type: application/json
        body: 
          username: "{{ provider.user }}"
          password: "{{ provider.password }}"
          loginProviderName: "{{ provider.auth_provider | default('tmos') }}"
        body_format: json
        timeout: 60
        status_code: 200, 202
        validate_certs: "{{ provider.validate_certs }}"
      register: auth

    - name: Create Certificate and Key on BIG-IQ
      uri:
        url: https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/adc-core/tasks/certificate-management
        method: POST
        headers:
          Content-Type: application/json
          X-F5-Auth-Token: "{{ auth.json.token.token }}"
        body: |
          {
              "issuer": "Self",
              "itemName": "{{ cn }}.crt",
              "itemPartition": "Common",
              "durationInDays": 365,
              "country": "US",
              "commonName": "{{ cn }}.f5demo.com",
              "division": "UDF lab",
              "organization": "F5",
              "locality": "Seattle",
              "state": "WA",
              "subjectAlternativeName": "DNS: {{ cn }}.f5demo.com",
              "securityType": "normal",
              "keyType": "RSA",
              "keySize": 2048,
              "command": "GENERATE_CERT"
          }
        body_format: json
        timeout: 60
        status_code: 200, 202
        validate_certs: "{{ provider.validate_certs }}"
      register: json_response

    - name: Check Certificate and Key creation status
      uri:
        url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/adc-core/tasks/certificate-management/{{ json_response.json.id }}"
        timeout: 60
        validate_certs: "{{ provider.validate_certs }}"
        headers:
          Content-Type: application/json
          X-F5-Auth-Token: "{{ auth.json.token.token }}"
      register: status
      until: status.json.status in ['FINISHED', 'FAILED']
      retries: 10
      delay: 10
      failed_when: "'FAILED' in status.json.status"
      changed_when: "'FINISHED' in status.json.status"

    - name: Pin and deploy SSL certificate and key to BIG-IP
      include_role:
        name: f5devcentral.bigiq_pinning_deploy_objects
      vars:
        bigiq_task_name: "Deployment through Ansible/API - {{ cn }}"
        modules: 
          - name: ltm
            pins:
              - { type: "sslCertReferences", name: "{{ cn }}.crt" }
              - { type: "sslKeyReferences", name: "{{ cn }}.key" }
        device_address: "{{ ve_ip_address }}"
      register: status

    - name: Deploy AS3 application services to BIG-IP
      include_role:
        name: f5devcentral.atc_deploy
      vars:
        atc_service: AS3
        atc_method: POST
        atc_declaration: "{{ lookup('template','as3/as3_bigiq_https_app.j2') }}"
        atc_delay: 30
        atc_retries: 15
      register: atc_AS3_status

    - name: Move an AS3 application service in BIG-IQ dashboard.
      include_role:
        name: f5devcentral.bigiq_move_app_dashboard
      vars:
          apps: 
          - name: myWebApp
            pins:
              - name: "{{ tenant }}_{{ appName }}"
      register: status